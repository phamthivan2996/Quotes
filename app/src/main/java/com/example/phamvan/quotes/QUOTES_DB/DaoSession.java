package com.example.phamvan.quotes.QUOTES_DB;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.phamvan.quotes.QUOTES_DB.UserNote;
import com.example.phamvan.quotes.QUOTES_DB.UserLike;
import com.example.phamvan.quotes.QUOTES_DB.Beautiful;
import com.example.phamvan.quotes.QUOTES_DB.Friendship;
import com.example.phamvan.quotes.QUOTES_DB.Family;
import com.example.phamvan.quotes.QUOTES_DB.Happiness;
import com.example.phamvan.quotes.QUOTES_DB.HeartSpirit;
import com.example.phamvan.quotes.QUOTES_DB.Knowledge;
import com.example.phamvan.quotes.QUOTES_DB.Love;
import com.example.phamvan.quotes.QUOTES_DB.LoveLife;
import com.example.phamvan.quotes.QUOTES_DB.Man;
import com.example.phamvan.quotes.QUOTES_DB.ManWoman;
import com.example.phamvan.quotes.QUOTES_DB.Marriage;

import com.example.phamvan.quotes.QUOTES_DB.UserNoteDao;
import com.example.phamvan.quotes.QUOTES_DB.UserLikeDao;
import com.example.phamvan.quotes.QUOTES_DB.BeautifulDao;
import com.example.phamvan.quotes.QUOTES_DB.FriendshipDao;
import com.example.phamvan.quotes.QUOTES_DB.FamilyDao;
import com.example.phamvan.quotes.QUOTES_DB.HappinessDao;
import com.example.phamvan.quotes.QUOTES_DB.HeartSpiritDao;
import com.example.phamvan.quotes.QUOTES_DB.KnowledgeDao;
import com.example.phamvan.quotes.QUOTES_DB.LoveDao;
import com.example.phamvan.quotes.QUOTES_DB.LoveLifeDao;
import com.example.phamvan.quotes.QUOTES_DB.ManDao;
import com.example.phamvan.quotes.QUOTES_DB.ManWomanDao;
import com.example.phamvan.quotes.QUOTES_DB.MarriageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userNoteDaoConfig;
    private final DaoConfig userLikeDaoConfig;
    private final DaoConfig beautifulDaoConfig;
    private final DaoConfig friendshipDaoConfig;
    private final DaoConfig familyDaoConfig;
    private final DaoConfig happinessDaoConfig;
    private final DaoConfig heartSpiritDaoConfig;
    private final DaoConfig knowledgeDaoConfig;
    private final DaoConfig loveDaoConfig;
    private final DaoConfig loveLifeDaoConfig;
    private final DaoConfig manDaoConfig;
    private final DaoConfig manWomanDaoConfig;
    private final DaoConfig marriageDaoConfig;

    private final UserNoteDao userNoteDao;
    private final UserLikeDao userLikeDao;
    private final BeautifulDao beautifulDao;
    private final FriendshipDao friendshipDao;
    private final FamilyDao familyDao;
    private final HappinessDao happinessDao;
    private final HeartSpiritDao heartSpiritDao;
    private final KnowledgeDao knowledgeDao;
    private final LoveDao loveDao;
    private final LoveLifeDao loveLifeDao;
    private final ManDao manDao;
    private final ManWomanDao manWomanDao;
    private final MarriageDao marriageDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userNoteDaoConfig = daoConfigMap.get(UserNoteDao.class).clone();
        userNoteDaoConfig.initIdentityScope(type);

        userLikeDaoConfig = daoConfigMap.get(UserLikeDao.class).clone();
        userLikeDaoConfig.initIdentityScope(type);

        beautifulDaoConfig = daoConfigMap.get(BeautifulDao.class).clone();
        beautifulDaoConfig.initIdentityScope(type);

        friendshipDaoConfig = daoConfigMap.get(FriendshipDao.class).clone();
        friendshipDaoConfig.initIdentityScope(type);

        familyDaoConfig = daoConfigMap.get(FamilyDao.class).clone();
        familyDaoConfig.initIdentityScope(type);

        happinessDaoConfig = daoConfigMap.get(HappinessDao.class).clone();
        happinessDaoConfig.initIdentityScope(type);

        heartSpiritDaoConfig = daoConfigMap.get(HeartSpiritDao.class).clone();
        heartSpiritDaoConfig.initIdentityScope(type);

        knowledgeDaoConfig = daoConfigMap.get(KnowledgeDao.class).clone();
        knowledgeDaoConfig.initIdentityScope(type);

        loveDaoConfig = daoConfigMap.get(LoveDao.class).clone();
        loveDaoConfig.initIdentityScope(type);

        loveLifeDaoConfig = daoConfigMap.get(LoveLifeDao.class).clone();
        loveLifeDaoConfig.initIdentityScope(type);

        manDaoConfig = daoConfigMap.get(ManDao.class).clone();
        manDaoConfig.initIdentityScope(type);

        manWomanDaoConfig = daoConfigMap.get(ManWomanDao.class).clone();
        manWomanDaoConfig.initIdentityScope(type);

        marriageDaoConfig = daoConfigMap.get(MarriageDao.class).clone();
        marriageDaoConfig.initIdentityScope(type);

        userNoteDao = new UserNoteDao(userNoteDaoConfig, this);
        userLikeDao = new UserLikeDao(userLikeDaoConfig, this);
        beautifulDao = new BeautifulDao(beautifulDaoConfig, this);
        friendshipDao = new FriendshipDao(friendshipDaoConfig, this);
        familyDao = new FamilyDao(familyDaoConfig, this);
        happinessDao = new HappinessDao(happinessDaoConfig, this);
        heartSpiritDao = new HeartSpiritDao(heartSpiritDaoConfig, this);
        knowledgeDao = new KnowledgeDao(knowledgeDaoConfig, this);
        loveDao = new LoveDao(loveDaoConfig, this);
        loveLifeDao = new LoveLifeDao(loveLifeDaoConfig, this);
        manDao = new ManDao(manDaoConfig, this);
        manWomanDao = new ManWomanDao(manWomanDaoConfig, this);
        marriageDao = new MarriageDao(marriageDaoConfig, this);

        registerDao(UserNote.class, userNoteDao);
        registerDao(UserLike.class, userLikeDao);
        registerDao(Beautiful.class, beautifulDao);
        registerDao(Friendship.class, friendshipDao);
        registerDao(Family.class, familyDao);
        registerDao(Happiness.class, happinessDao);
        registerDao(HeartSpirit.class, heartSpiritDao);
        registerDao(Knowledge.class, knowledgeDao);
        registerDao(Love.class, loveDao);
        registerDao(LoveLife.class, loveLifeDao);
        registerDao(Man.class, manDao);
        registerDao(ManWoman.class, manWomanDao);
        registerDao(Marriage.class, marriageDao);
    }
    
    public void clear() {
        userNoteDaoConfig.clearIdentityScope();
        userLikeDaoConfig.clearIdentityScope();
        beautifulDaoConfig.clearIdentityScope();
        friendshipDaoConfig.clearIdentityScope();
        familyDaoConfig.clearIdentityScope();
        happinessDaoConfig.clearIdentityScope();
        heartSpiritDaoConfig.clearIdentityScope();
        knowledgeDaoConfig.clearIdentityScope();
        loveDaoConfig.clearIdentityScope();
        loveLifeDaoConfig.clearIdentityScope();
        manDaoConfig.clearIdentityScope();
        manWomanDaoConfig.clearIdentityScope();
        marriageDaoConfig.clearIdentityScope();
    }

    public UserNoteDao getUserNoteDao() {
        return userNoteDao;
    }

    public UserLikeDao getUserLikeDao() {
        return userLikeDao;
    }

    public BeautifulDao getBeautifulDao() {
        return beautifulDao;
    }

    public FriendshipDao getFriendshipDao() {
        return friendshipDao;
    }

    public FamilyDao getFamilyDao() {
        return familyDao;
    }

    public HappinessDao getHappinessDao() {
        return happinessDao;
    }

    public HeartSpiritDao getHeartSpiritDao() {
        return heartSpiritDao;
    }

    public KnowledgeDao getKnowledgeDao() {
        return knowledgeDao;
    }

    public LoveDao getLoveDao() {
        return loveDao;
    }

    public LoveLifeDao getLoveLifeDao() {
        return loveLifeDao;
    }

    public ManDao getManDao() {
        return manDao;
    }

    public ManWomanDao getManWomanDao() {
        return manWomanDao;
    }

    public MarriageDao getMarriageDao() {
        return marriageDao;
    }

}
